#!/usr/bin/perl

use Genome;
use Revision;
use Library;
use Users;
use JenkinsData;

use strict;
use warnings;


# flush output buffer after every write or print
local $| = 1;
Library::setup_model_process_test();


Library::set_genome_software_result_test_name();

if (Genome::Sys->username eq 'apipe-tester' && !$ENV{MODEL_TEST_TO}) {
    $ENV{MODEL_TEST_TO} = Library::users_to_addresses(Users->cle);
}

my $cle_test = Genome::Site::TGI::CleTest->create();
my @builds = $cle_test->get_builds();

my $start_time = time;
my @diff_cmds;

my $timeout = Library::get_timeout_seconds(24);
for my $build (@builds) {
    Library::wait_for_build($build, $start_time, $timeout);
    UR::Context->current->reload($build);
    Library::check_build_failure($build);
    my $diff_cmd = $cle_test->diff_build($build);
    if (defined $diff_cmd) {
        push @diff_cmds, $diff_cmd;
    }
}

my $process = $cle_test->get_process();

Library::wait_for_process($process, $timeout);

UR::Context->current->reload($process);

Library::check_process_failure($process);

my $process_diff_cmd = $cle_test->diff_process($process);
if ($process_diff_cmd) {
    push @diff_cmds, $process_diff_cmd;
}
if (@diff_cmds) {
    Library::send_diff_mail(@diff_cmds);
    exit(255);
}
# functions

sub fail {
    Library::fail("cle test", @_);
}

