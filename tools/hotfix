#!/usr/bin/env perl

use IO::File;

my $base_path = '/gsc/scripts/opt/passed-model-tests';
my $old_path = shift @ARGV;
if ($old_path =~ /stable/) {
    $old_path = readlink('/gsc/scripts/opt/genome-stable');
    $old_path =~ s/^\.\//\/gsc\/scripts\/opt\//;
}
else {
    $old_path = $base_path . '/genome-' . $old_path;
}

my $git_repo = shift @ARGV;
unless ($git_repo) {
    print "ERROR: please specify a git repo as second argument\n";
    exit;
}
unless (@ARGV) {
    print "ERROR: please specify git hashes as third+ arguments\n";
    exit;
}

$old_path =~ s/genome-genome/genome/;

my $new_path;
if ( $old_path =~ /genome-\d+$/ ) {
    $new_path = "$old_path-fix1";
}
elsif ($old_path =~ /genome-\d+-fix(\d+)/) {
    my $old_fix = $1;
    my $new_fix = $old_fix + 1;
    $new_path = $old_path;
    $new_path =~ s/\d+$/$new_fix/;
}

unless ( -d $old_path ) {
    print "ERROR: old_path does not exists: $old_path\n";
    exit;
}

if ( -d $new_path ) {
    print "ERROR: new_path already exists: $new_path\n";
    exit;
}

print "Old: $old_path\nNew: $new_path\n";

print "Copying $old_path to $new_path...\n";
unless(system("cp -a $old_path $new_path") == 0) {
    print "ERROR: Failed to 'cp -a $old_path $new_path'\n";
    print "You may want to remove $new_path.\n";
    exit;
}

for my $argv (@ARGV) {
    my $git_hash;

    if ( -d $argv ) {
        $git_repo = $argv;
        next;
    }
    else {
        $git_hash = $argv;
    }

    my @git_data = `cd $git_repo && git show --oneline $git_hash ; cd -`;
    my $git_msg = shift @git_data;
    print "Generating patch for $git_msg and applying to $new_path...\n";

    my @git_patch = grep { $_ !~ /^diff\ --git/ } @git_data;
    @git_patch = grep { $_ !~ /index\ [a-z0-9]+\.\.[a-z0-9]+/ } @git_patch;

    my $patch_fh = IO::File->new(">$new_path/$git_hash.patch");
    print $patch_fh join('', @git_patch);

    my $hotfixes_fh = IO::File->new(">>$new_path/hotfixes");
    my $fix_version = $new_path; $fix_version =~ s/.*genome-\d+-//;
    print $hotfixes_fh "$fix_version: $git_msg";

    unless(system("patch -p 1 -d $new_path -i $new_path/$git_hash.patch") == 0) {
        print "ERROR: Failed to patch $new_path!\n";
        print "You may want to remove $new_path.\n";
        exit;
    }
}

print "Successfully created hotfix at $new_path\n";
